#include /etc/nginx/modules/*.*;
load_module /etc/nginx/modules/ngx_http_image_filter_module.so;

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #    include /etc/nginx/conf.d/*.conf;

    server {
                server_name localhost;
                root /home/tasks4;

                location /music {
                  root /home/tasks4;
                  try_files $uri index.html =404;
                }
		location /tasks6 {
		   root /home;
		   add_header Refresh "1; url=https://dimamal.ddns.net/tasks6/1.txt";
		   #expires -1;
		   # return 301 https://dimamal.ddns.net/tasks6/index.html;
		   try_files $uri 1.txt =404; 
		  
		  }

		location /php {
		  proxy_pass http://apache-services/;
	 	  proxy_set_header Host $host;
          	  proxy_set_header X-Real-IP $remote_addr;
       	  	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;	
		}


		location /page1 {
		 root /home/tasks4;
		}

		location /proxy {
		  proxy_pass       https://www.onliner.by/;
    		  proxy_set_header Host      $host;
    		  proxy_set_header X-Real-IP $remote_addr;
		  }


		location /cpu {
		  alias /home/tasks4/;
		  try_files  /1.txt =404;
		  }




		location /4xx {
          	  root /home/tasks4;
       		  return 404 "For log test 4xx";
    		  default_type text/plain;  
		}
		
		location /5xx {
		  root /home/tasks4;
    		  return 501 "For log test 5xx";
     		  default_type text/plain;
		
		}

		location /image1 {
		  return 301 /image1/a.jpg;
		  }


  		location /image2 {
                  return 301 /image2/b.png;
                  }


		location ~* ^/image1/(.+\.jpg)$ {
		  image_filter rotate 180;
#		  root /home/task4/;
 		  rewrite ^/image1$ home/image1/a.jpg permanent;
}

		location ~* ^/image2/(.+\.png)$ {
		 # try_files $uri $uri$1 $uri/ /image2/b.png =404;
#		  root /home/task4;
  		  rewrite ^/image2$ home/image2/b.png permanent;
}


}}
